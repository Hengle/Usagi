import 'nanopb.proto';
import 'Engine/Graphics/RenderConsts.proto';

package usg;

enum ResourceType
{
	RESOURCE_TEXTURE		  = 0;
	RESOURCE_EFFECT			  = 1;
	RESOURCE_PARTICLE_EMITTER = 2;
	RESOURCE_PARTICLE_EFFECT  = 3;
	RESOURCE_FORCE_SIZE		  = 0x7FFFFFFF; // Force enum size to sizeof(int32_t)
}


message ResourceGroup
{
	required uint32 uCount = 1;
	required uint32 uHdrOffset = 2;
}

message Resources
{
	required uint32 uFullHeaderSize          = 1;
	optional ResourceGroup textures          = 2;
	optional ResourceGroup effects           = 3;
	optional ResourceGroup particle_emitters = 4;
	optional ResourceGroup particle_effects  = 5;
}

message ResourceHeader
{
	required ResourceType eResourceType = 1;
	required string strName = 2 [(nanopb).max_size = 60, (nanopb).has_max_size = true];
	required uint32 uNameCRC =	3;
	required uint32 uDataOffset = 4;	// The platform specific data offset from the beginning of the PS data
	required uint32 uDataSize = 5;		// The size of the platform specific data
}

message TexturePakCmn
{
	required usg.TextureDimensions eDimensions = 1;
	required usg.GPULocation eGPULocation = 2;
	required uint32 uWidth = 3; 
	required uint32 uHeight = 4;
	required uint32 uDepth = 5;
	required uint32 uMaxMip = 6;
}


message TexturePak
{
	required ResourceHeader resHdr = 1;
	required TexturePakCmn	cmnData = 2;
}

message EffectPak
{
	required ResourceHeader resHdr = 1;
}

message ParticleEmitterPak
{
	required ResourceHeader resHdr = 1;
}

message ParticleEffectPak
{
	required ResourceHeader resHdr = 1;
}